// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/version.proto

package com.google.appengine.v1;

/**
 * <pre>
 * Automatic scaling is based on request rate, response latencies, and other
 * application metrics.
 * </pre>
 *
 * Protobuf type {@code google.appengine.v1.AutomaticScaling}
 */
public final class AutomaticScaling extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.appengine.v1.AutomaticScaling)
    AutomaticScalingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AutomaticScaling.newBuilder() to construct.
  private AutomaticScaling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AutomaticScaling() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AutomaticScaling();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AutomaticScaling(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (coolDownPeriod_ != null) {
              subBuilder = coolDownPeriod_.toBuilder();
            }
            coolDownPeriod_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(coolDownPeriod_);
              coolDownPeriod_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.appengine.v1.CpuUtilization.Builder subBuilder = null;
            if (cpuUtilization_ != null) {
              subBuilder = cpuUtilization_.toBuilder();
            }
            cpuUtilization_ = input.readMessage(com.google.appengine.v1.CpuUtilization.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(cpuUtilization_);
              cpuUtilization_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            maxConcurrentRequests_ = input.readInt32();
            break;
          }
          case 32: {

            maxIdleInstances_ = input.readInt32();
            break;
          }
          case 40: {

            maxTotalInstances_ = input.readInt32();
            break;
          }
          case 50: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (maxPendingLatency_ != null) {
              subBuilder = maxPendingLatency_.toBuilder();
            }
            maxPendingLatency_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxPendingLatency_);
              maxPendingLatency_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {

            minIdleInstances_ = input.readInt32();
            break;
          }
          case 64: {

            minTotalInstances_ = input.readInt32();
            break;
          }
          case 74: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (minPendingLatency_ != null) {
              subBuilder = minPendingLatency_.toBuilder();
            }
            minPendingLatency_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(minPendingLatency_);
              minPendingLatency_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.appengine.v1.RequestUtilization.Builder subBuilder = null;
            if (requestUtilization_ != null) {
              subBuilder = requestUtilization_.toBuilder();
            }
            requestUtilization_ = input.readMessage(com.google.appengine.v1.RequestUtilization.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(requestUtilization_);
              requestUtilization_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.appengine.v1.DiskUtilization.Builder subBuilder = null;
            if (diskUtilization_ != null) {
              subBuilder = diskUtilization_.toBuilder();
            }
            diskUtilization_ = input.readMessage(com.google.appengine.v1.DiskUtilization.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(diskUtilization_);
              diskUtilization_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            com.google.appengine.v1.NetworkUtilization.Builder subBuilder = null;
            if (networkUtilization_ != null) {
              subBuilder = networkUtilization_.toBuilder();
            }
            networkUtilization_ = input.readMessage(com.google.appengine.v1.NetworkUtilization.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(networkUtilization_);
              networkUtilization_ = subBuilder.buildPartial();
            }

            break;
          }
          case 162: {
            com.google.appengine.v1.StandardSchedulerSettings.Builder subBuilder = null;
            if (standardSchedulerSettings_ != null) {
              subBuilder = standardSchedulerSettings_.toBuilder();
            }
            standardSchedulerSettings_ = input.readMessage(com.google.appengine.v1.StandardSchedulerSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(standardSchedulerSettings_);
              standardSchedulerSettings_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.appengine.v1.VersionProto.internal_static_google_appengine_v1_AutomaticScaling_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.appengine.v1.VersionProto.internal_static_google_appengine_v1_AutomaticScaling_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.appengine.v1.AutomaticScaling.class, com.google.appengine.v1.AutomaticScaling.Builder.class);
  }

  public static final int COOL_DOWN_PERIOD_FIELD_NUMBER = 1;
  private com.google.protobuf.Duration coolDownPeriod_;
  /**
   * <pre>
   * The time period that the
   * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
   * should wait before it starts collecting information from a new instance.
   * This prevents the autoscaler from collecting information when the instance
   * is initializing, during which the collected usage would not be reliable.
   * Only applicable in the App Engine flexible environment.
   * </pre>
   *
   * <code>.google.protobuf.Duration cool_down_period = 1;</code>
   * @return Whether the coolDownPeriod field is set.
   */
  @java.lang.Override
  public boolean hasCoolDownPeriod() {
    return coolDownPeriod_ != null;
  }
  /**
   * <pre>
   * The time period that the
   * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
   * should wait before it starts collecting information from a new instance.
   * This prevents the autoscaler from collecting information when the instance
   * is initializing, during which the collected usage would not be reliable.
   * Only applicable in the App Engine flexible environment.
   * </pre>
   *
   * <code>.google.protobuf.Duration cool_down_period = 1;</code>
   * @return The coolDownPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getCoolDownPeriod() {
    return coolDownPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : coolDownPeriod_;
  }
  /**
   * <pre>
   * The time period that the
   * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
   * should wait before it starts collecting information from a new instance.
   * This prevents the autoscaler from collecting information when the instance
   * is initializing, during which the collected usage would not be reliable.
   * Only applicable in the App Engine flexible environment.
   * </pre>
   *
   * <code>.google.protobuf.Duration cool_down_period = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getCoolDownPeriodOrBuilder() {
    return getCoolDownPeriod();
  }

  public static final int CPU_UTILIZATION_FIELD_NUMBER = 2;
  private com.google.appengine.v1.CpuUtilization cpuUtilization_;
  /**
   * <pre>
   * Target scaling by CPU usage.
   * </pre>
   *
   * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
   * @return Whether the cpuUtilization field is set.
   */
  @java.lang.Override
  public boolean hasCpuUtilization() {
    return cpuUtilization_ != null;
  }
  /**
   * <pre>
   * Target scaling by CPU usage.
   * </pre>
   *
   * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
   * @return The cpuUtilization.
   */
  @java.lang.Override
  public com.google.appengine.v1.CpuUtilization getCpuUtilization() {
    return cpuUtilization_ == null ? com.google.appengine.v1.CpuUtilization.getDefaultInstance() : cpuUtilization_;
  }
  /**
   * <pre>
   * Target scaling by CPU usage.
   * </pre>
   *
   * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
   */
  @java.lang.Override
  public com.google.appengine.v1.CpuUtilizationOrBuilder getCpuUtilizationOrBuilder() {
    return getCpuUtilization();
  }

  public static final int MAX_CONCURRENT_REQUESTS_FIELD_NUMBER = 3;
  private int maxConcurrentRequests_;
  /**
   * <pre>
   * Number of concurrent requests an automatic scaling instance can accept
   * before the scheduler spawns a new instance.
   * Defaults to a runtime-specific value.
   * </pre>
   *
   * <code>int32 max_concurrent_requests = 3;</code>
   * @return The maxConcurrentRequests.
   */
  @java.lang.Override
  public int getMaxConcurrentRequests() {
    return maxConcurrentRequests_;
  }

  public static final int MAX_IDLE_INSTANCES_FIELD_NUMBER = 4;
  private int maxIdleInstances_;
  /**
   * <pre>
   * Maximum number of idle instances that should be maintained for this
   * version.
   * </pre>
   *
   * <code>int32 max_idle_instances = 4;</code>
   * @return The maxIdleInstances.
   */
  @java.lang.Override
  public int getMaxIdleInstances() {
    return maxIdleInstances_;
  }

  public static final int MAX_TOTAL_INSTANCES_FIELD_NUMBER = 5;
  private int maxTotalInstances_;
  /**
   * <pre>
   * Maximum number of instances that should be started to handle requests for
   * this version.
   * </pre>
   *
   * <code>int32 max_total_instances = 5;</code>
   * @return The maxTotalInstances.
   */
  @java.lang.Override
  public int getMaxTotalInstances() {
    return maxTotalInstances_;
  }

  public static final int MAX_PENDING_LATENCY_FIELD_NUMBER = 6;
  private com.google.protobuf.Duration maxPendingLatency_;
  /**
   * <pre>
   * Maximum amount of time that a request should wait in the pending queue
   * before starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
   * @return Whether the maxPendingLatency field is set.
   */
  @java.lang.Override
  public boolean hasMaxPendingLatency() {
    return maxPendingLatency_ != null;
  }
  /**
   * <pre>
   * Maximum amount of time that a request should wait in the pending queue
   * before starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
   * @return The maxPendingLatency.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMaxPendingLatency() {
    return maxPendingLatency_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxPendingLatency_;
  }
  /**
   * <pre>
   * Maximum amount of time that a request should wait in the pending queue
   * before starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMaxPendingLatencyOrBuilder() {
    return getMaxPendingLatency();
  }

  public static final int MIN_IDLE_INSTANCES_FIELD_NUMBER = 7;
  private int minIdleInstances_;
  /**
   * <pre>
   * Minimum number of idle instances that should be maintained for
   * this version. Only applicable for the default version of a service.
   * </pre>
   *
   * <code>int32 min_idle_instances = 7;</code>
   * @return The minIdleInstances.
   */
  @java.lang.Override
  public int getMinIdleInstances() {
    return minIdleInstances_;
  }

  public static final int MIN_TOTAL_INSTANCES_FIELD_NUMBER = 8;
  private int minTotalInstances_;
  /**
   * <pre>
   * Minimum number of running instances that should be maintained for this
   * version.
   * </pre>
   *
   * <code>int32 min_total_instances = 8;</code>
   * @return The minTotalInstances.
   */
  @java.lang.Override
  public int getMinTotalInstances() {
    return minTotalInstances_;
  }

  public static final int MIN_PENDING_LATENCY_FIELD_NUMBER = 9;
  private com.google.protobuf.Duration minPendingLatency_;
  /**
   * <pre>
   * Minimum amount of time a request should wait in the pending queue before
   * starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
   * @return Whether the minPendingLatency field is set.
   */
  @java.lang.Override
  public boolean hasMinPendingLatency() {
    return minPendingLatency_ != null;
  }
  /**
   * <pre>
   * Minimum amount of time a request should wait in the pending queue before
   * starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
   * @return The minPendingLatency.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMinPendingLatency() {
    return minPendingLatency_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minPendingLatency_;
  }
  /**
   * <pre>
   * Minimum amount of time a request should wait in the pending queue before
   * starting a new instance to handle it.
   * </pre>
   *
   * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMinPendingLatencyOrBuilder() {
    return getMinPendingLatency();
  }

  public static final int REQUEST_UTILIZATION_FIELD_NUMBER = 10;
  private com.google.appengine.v1.RequestUtilization requestUtilization_;
  /**
   * <pre>
   * Target scaling by request utilization.
   * </pre>
   *
   * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
   * @return Whether the requestUtilization field is set.
   */
  @java.lang.Override
  public boolean hasRequestUtilization() {
    return requestUtilization_ != null;
  }
  /**
   * <pre>
   * Target scaling by request utilization.
   * </pre>
   *
   * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
   * @return The requestUtilization.
   */
  @java.lang.Override
  public com.google.appengine.v1.RequestUtilization getRequestUtilization() {
    return requestUtilization_ == null ? com.google.appengine.v1.RequestUtilization.getDefaultInstance() : requestUtilization_;
  }
  /**
   * <pre>
   * Target scaling by request utilization.
   * </pre>
   *
   * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
   */
  @java.lang.Override
  public com.google.appengine.v1.RequestUtilizationOrBuilder getRequestUtilizationOrBuilder() {
    return getRequestUtilization();
  }

  public static final int DISK_UTILIZATION_FIELD_NUMBER = 11;
  private com.google.appengine.v1.DiskUtilization diskUtilization_;
  /**
   * <pre>
   * Target scaling by disk usage.
   * </pre>
   *
   * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
   * @return Whether the diskUtilization field is set.
   */
  @java.lang.Override
  public boolean hasDiskUtilization() {
    return diskUtilization_ != null;
  }
  /**
   * <pre>
   * Target scaling by disk usage.
   * </pre>
   *
   * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
   * @return The diskUtilization.
   */
  @java.lang.Override
  public com.google.appengine.v1.DiskUtilization getDiskUtilization() {
    return diskUtilization_ == null ? com.google.appengine.v1.DiskUtilization.getDefaultInstance() : diskUtilization_;
  }
  /**
   * <pre>
   * Target scaling by disk usage.
   * </pre>
   *
   * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
   */
  @java.lang.Override
  public com.google.appengine.v1.DiskUtilizationOrBuilder getDiskUtilizationOrBuilder() {
    return getDiskUtilization();
  }

  public static final int NETWORK_UTILIZATION_FIELD_NUMBER = 12;
  private com.google.appengine.v1.NetworkUtilization networkUtilization_;
  /**
   * <pre>
   * Target scaling by network usage.
   * </pre>
   *
   * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
   * @return Whether the networkUtilization field is set.
   */
  @java.lang.Override
  public boolean hasNetworkUtilization() {
    return networkUtilization_ != null;
  }
  /**
   * <pre>
   * Target scaling by network usage.
   * </pre>
   *
   * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
   * @return The networkUtilization.
   */
  @java.lang.Override
  public com.google.appengine.v1.NetworkUtilization getNetworkUtilization() {
    return networkUtilization_ == null ? com.google.appengine.v1.NetworkUtilization.getDefaultInstance() : networkUtilization_;
  }
  /**
   * <pre>
   * Target scaling by network usage.
   * </pre>
   *
   * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
   */
  @java.lang.Override
  public com.google.appengine.v1.NetworkUtilizationOrBuilder getNetworkUtilizationOrBuilder() {
    return getNetworkUtilization();
  }

  public static final int STANDARD_SCHEDULER_SETTINGS_FIELD_NUMBER = 20;
  private com.google.appengine.v1.StandardSchedulerSettings standardSchedulerSettings_;
  /**
   * <pre>
   * Scheduler settings for standard environment.
   * </pre>
   *
   * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
   * @return Whether the standardSchedulerSettings field is set.
   */
  @java.lang.Override
  public boolean hasStandardSchedulerSettings() {
    return standardSchedulerSettings_ != null;
  }
  /**
   * <pre>
   * Scheduler settings for standard environment.
   * </pre>
   *
   * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
   * @return The standardSchedulerSettings.
   */
  @java.lang.Override
  public com.google.appengine.v1.StandardSchedulerSettings getStandardSchedulerSettings() {
    return standardSchedulerSettings_ == null ? com.google.appengine.v1.StandardSchedulerSettings.getDefaultInstance() : standardSchedulerSettings_;
  }
  /**
   * <pre>
   * Scheduler settings for standard environment.
   * </pre>
   *
   * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
   */
  @java.lang.Override
  public com.google.appengine.v1.StandardSchedulerSettingsOrBuilder getStandardSchedulerSettingsOrBuilder() {
    return getStandardSchedulerSettings();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (coolDownPeriod_ != null) {
      output.writeMessage(1, getCoolDownPeriod());
    }
    if (cpuUtilization_ != null) {
      output.writeMessage(2, getCpuUtilization());
    }
    if (maxConcurrentRequests_ != 0) {
      output.writeInt32(3, maxConcurrentRequests_);
    }
    if (maxIdleInstances_ != 0) {
      output.writeInt32(4, maxIdleInstances_);
    }
    if (maxTotalInstances_ != 0) {
      output.writeInt32(5, maxTotalInstances_);
    }
    if (maxPendingLatency_ != null) {
      output.writeMessage(6, getMaxPendingLatency());
    }
    if (minIdleInstances_ != 0) {
      output.writeInt32(7, minIdleInstances_);
    }
    if (minTotalInstances_ != 0) {
      output.writeInt32(8, minTotalInstances_);
    }
    if (minPendingLatency_ != null) {
      output.writeMessage(9, getMinPendingLatency());
    }
    if (requestUtilization_ != null) {
      output.writeMessage(10, getRequestUtilization());
    }
    if (diskUtilization_ != null) {
      output.writeMessage(11, getDiskUtilization());
    }
    if (networkUtilization_ != null) {
      output.writeMessage(12, getNetworkUtilization());
    }
    if (standardSchedulerSettings_ != null) {
      output.writeMessage(20, getStandardSchedulerSettings());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (coolDownPeriod_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCoolDownPeriod());
    }
    if (cpuUtilization_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCpuUtilization());
    }
    if (maxConcurrentRequests_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxConcurrentRequests_);
    }
    if (maxIdleInstances_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maxIdleInstances_);
    }
    if (maxTotalInstances_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, maxTotalInstances_);
    }
    if (maxPendingLatency_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getMaxPendingLatency());
    }
    if (minIdleInstances_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, minIdleInstances_);
    }
    if (minTotalInstances_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, minTotalInstances_);
    }
    if (minPendingLatency_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getMinPendingLatency());
    }
    if (requestUtilization_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getRequestUtilization());
    }
    if (diskUtilization_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDiskUtilization());
    }
    if (networkUtilization_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getNetworkUtilization());
    }
    if (standardSchedulerSettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getStandardSchedulerSettings());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.appengine.v1.AutomaticScaling)) {
      return super.equals(obj);
    }
    com.google.appengine.v1.AutomaticScaling other = (com.google.appengine.v1.AutomaticScaling) obj;

    if (hasCoolDownPeriod() != other.hasCoolDownPeriod()) return false;
    if (hasCoolDownPeriod()) {
      if (!getCoolDownPeriod()
          .equals(other.getCoolDownPeriod())) return false;
    }
    if (hasCpuUtilization() != other.hasCpuUtilization()) return false;
    if (hasCpuUtilization()) {
      if (!getCpuUtilization()
          .equals(other.getCpuUtilization())) return false;
    }
    if (getMaxConcurrentRequests()
        != other.getMaxConcurrentRequests()) return false;
    if (getMaxIdleInstances()
        != other.getMaxIdleInstances()) return false;
    if (getMaxTotalInstances()
        != other.getMaxTotalInstances()) return false;
    if (hasMaxPendingLatency() != other.hasMaxPendingLatency()) return false;
    if (hasMaxPendingLatency()) {
      if (!getMaxPendingLatency()
          .equals(other.getMaxPendingLatency())) return false;
    }
    if (getMinIdleInstances()
        != other.getMinIdleInstances()) return false;
    if (getMinTotalInstances()
        != other.getMinTotalInstances()) return false;
    if (hasMinPendingLatency() != other.hasMinPendingLatency()) return false;
    if (hasMinPendingLatency()) {
      if (!getMinPendingLatency()
          .equals(other.getMinPendingLatency())) return false;
    }
    if (hasRequestUtilization() != other.hasRequestUtilization()) return false;
    if (hasRequestUtilization()) {
      if (!getRequestUtilization()
          .equals(other.getRequestUtilization())) return false;
    }
    if (hasDiskUtilization() != other.hasDiskUtilization()) return false;
    if (hasDiskUtilization()) {
      if (!getDiskUtilization()
          .equals(other.getDiskUtilization())) return false;
    }
    if (hasNetworkUtilization() != other.hasNetworkUtilization()) return false;
    if (hasNetworkUtilization()) {
      if (!getNetworkUtilization()
          .equals(other.getNetworkUtilization())) return false;
    }
    if (hasStandardSchedulerSettings() != other.hasStandardSchedulerSettings()) return false;
    if (hasStandardSchedulerSettings()) {
      if (!getStandardSchedulerSettings()
          .equals(other.getStandardSchedulerSettings())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCoolDownPeriod()) {
      hash = (37 * hash) + COOL_DOWN_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getCoolDownPeriod().hashCode();
    }
    if (hasCpuUtilization()) {
      hash = (37 * hash) + CPU_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + getCpuUtilization().hashCode();
    }
    hash = (37 * hash) + MAX_CONCURRENT_REQUESTS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxConcurrentRequests();
    hash = (37 * hash) + MAX_IDLE_INSTANCES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxIdleInstances();
    hash = (37 * hash) + MAX_TOTAL_INSTANCES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxTotalInstances();
    if (hasMaxPendingLatency()) {
      hash = (37 * hash) + MAX_PENDING_LATENCY_FIELD_NUMBER;
      hash = (53 * hash) + getMaxPendingLatency().hashCode();
    }
    hash = (37 * hash) + MIN_IDLE_INSTANCES_FIELD_NUMBER;
    hash = (53 * hash) + getMinIdleInstances();
    hash = (37 * hash) + MIN_TOTAL_INSTANCES_FIELD_NUMBER;
    hash = (53 * hash) + getMinTotalInstances();
    if (hasMinPendingLatency()) {
      hash = (37 * hash) + MIN_PENDING_LATENCY_FIELD_NUMBER;
      hash = (53 * hash) + getMinPendingLatency().hashCode();
    }
    if (hasRequestUtilization()) {
      hash = (37 * hash) + REQUEST_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + getRequestUtilization().hashCode();
    }
    if (hasDiskUtilization()) {
      hash = (37 * hash) + DISK_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + getDiskUtilization().hashCode();
    }
    if (hasNetworkUtilization()) {
      hash = (37 * hash) + NETWORK_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkUtilization().hashCode();
    }
    if (hasStandardSchedulerSettings()) {
      hash = (37 * hash) + STANDARD_SCHEDULER_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getStandardSchedulerSettings().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.appengine.v1.AutomaticScaling parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.appengine.v1.AutomaticScaling parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.appengine.v1.AutomaticScaling parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.appengine.v1.AutomaticScaling prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Automatic scaling is based on request rate, response latencies, and other
   * application metrics.
   * </pre>
   *
   * Protobuf type {@code google.appengine.v1.AutomaticScaling}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.appengine.v1.AutomaticScaling)
      com.google.appengine.v1.AutomaticScalingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.appengine.v1.VersionProto.internal_static_google_appengine_v1_AutomaticScaling_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.appengine.v1.VersionProto.internal_static_google_appengine_v1_AutomaticScaling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.appengine.v1.AutomaticScaling.class, com.google.appengine.v1.AutomaticScaling.Builder.class);
    }

    // Construct using com.google.appengine.v1.AutomaticScaling.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (coolDownPeriodBuilder_ == null) {
        coolDownPeriod_ = null;
      } else {
        coolDownPeriod_ = null;
        coolDownPeriodBuilder_ = null;
      }
      if (cpuUtilizationBuilder_ == null) {
        cpuUtilization_ = null;
      } else {
        cpuUtilization_ = null;
        cpuUtilizationBuilder_ = null;
      }
      maxConcurrentRequests_ = 0;

      maxIdleInstances_ = 0;

      maxTotalInstances_ = 0;

      if (maxPendingLatencyBuilder_ == null) {
        maxPendingLatency_ = null;
      } else {
        maxPendingLatency_ = null;
        maxPendingLatencyBuilder_ = null;
      }
      minIdleInstances_ = 0;

      minTotalInstances_ = 0;

      if (minPendingLatencyBuilder_ == null) {
        minPendingLatency_ = null;
      } else {
        minPendingLatency_ = null;
        minPendingLatencyBuilder_ = null;
      }
      if (requestUtilizationBuilder_ == null) {
        requestUtilization_ = null;
      } else {
        requestUtilization_ = null;
        requestUtilizationBuilder_ = null;
      }
      if (diskUtilizationBuilder_ == null) {
        diskUtilization_ = null;
      } else {
        diskUtilization_ = null;
        diskUtilizationBuilder_ = null;
      }
      if (networkUtilizationBuilder_ == null) {
        networkUtilization_ = null;
      } else {
        networkUtilization_ = null;
        networkUtilizationBuilder_ = null;
      }
      if (standardSchedulerSettingsBuilder_ == null) {
        standardSchedulerSettings_ = null;
      } else {
        standardSchedulerSettings_ = null;
        standardSchedulerSettingsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.appengine.v1.VersionProto.internal_static_google_appengine_v1_AutomaticScaling_descriptor;
    }

    @java.lang.Override
    public com.google.appengine.v1.AutomaticScaling getDefaultInstanceForType() {
      return com.google.appengine.v1.AutomaticScaling.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.appengine.v1.AutomaticScaling build() {
      com.google.appengine.v1.AutomaticScaling result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.appengine.v1.AutomaticScaling buildPartial() {
      com.google.appengine.v1.AutomaticScaling result = new com.google.appengine.v1.AutomaticScaling(this);
      if (coolDownPeriodBuilder_ == null) {
        result.coolDownPeriod_ = coolDownPeriod_;
      } else {
        result.coolDownPeriod_ = coolDownPeriodBuilder_.build();
      }
      if (cpuUtilizationBuilder_ == null) {
        result.cpuUtilization_ = cpuUtilization_;
      } else {
        result.cpuUtilization_ = cpuUtilizationBuilder_.build();
      }
      result.maxConcurrentRequests_ = maxConcurrentRequests_;
      result.maxIdleInstances_ = maxIdleInstances_;
      result.maxTotalInstances_ = maxTotalInstances_;
      if (maxPendingLatencyBuilder_ == null) {
        result.maxPendingLatency_ = maxPendingLatency_;
      } else {
        result.maxPendingLatency_ = maxPendingLatencyBuilder_.build();
      }
      result.minIdleInstances_ = minIdleInstances_;
      result.minTotalInstances_ = minTotalInstances_;
      if (minPendingLatencyBuilder_ == null) {
        result.minPendingLatency_ = minPendingLatency_;
      } else {
        result.minPendingLatency_ = minPendingLatencyBuilder_.build();
      }
      if (requestUtilizationBuilder_ == null) {
        result.requestUtilization_ = requestUtilization_;
      } else {
        result.requestUtilization_ = requestUtilizationBuilder_.build();
      }
      if (diskUtilizationBuilder_ == null) {
        result.diskUtilization_ = diskUtilization_;
      } else {
        result.diskUtilization_ = diskUtilizationBuilder_.build();
      }
      if (networkUtilizationBuilder_ == null) {
        result.networkUtilization_ = networkUtilization_;
      } else {
        result.networkUtilization_ = networkUtilizationBuilder_.build();
      }
      if (standardSchedulerSettingsBuilder_ == null) {
        result.standardSchedulerSettings_ = standardSchedulerSettings_;
      } else {
        result.standardSchedulerSettings_ = standardSchedulerSettingsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.appengine.v1.AutomaticScaling) {
        return mergeFrom((com.google.appengine.v1.AutomaticScaling)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.appengine.v1.AutomaticScaling other) {
      if (other == com.google.appengine.v1.AutomaticScaling.getDefaultInstance()) return this;
      if (other.hasCoolDownPeriod()) {
        mergeCoolDownPeriod(other.getCoolDownPeriod());
      }
      if (other.hasCpuUtilization()) {
        mergeCpuUtilization(other.getCpuUtilization());
      }
      if (other.getMaxConcurrentRequests() != 0) {
        setMaxConcurrentRequests(other.getMaxConcurrentRequests());
      }
      if (other.getMaxIdleInstances() != 0) {
        setMaxIdleInstances(other.getMaxIdleInstances());
      }
      if (other.getMaxTotalInstances() != 0) {
        setMaxTotalInstances(other.getMaxTotalInstances());
      }
      if (other.hasMaxPendingLatency()) {
        mergeMaxPendingLatency(other.getMaxPendingLatency());
      }
      if (other.getMinIdleInstances() != 0) {
        setMinIdleInstances(other.getMinIdleInstances());
      }
      if (other.getMinTotalInstances() != 0) {
        setMinTotalInstances(other.getMinTotalInstances());
      }
      if (other.hasMinPendingLatency()) {
        mergeMinPendingLatency(other.getMinPendingLatency());
      }
      if (other.hasRequestUtilization()) {
        mergeRequestUtilization(other.getRequestUtilization());
      }
      if (other.hasDiskUtilization()) {
        mergeDiskUtilization(other.getDiskUtilization());
      }
      if (other.hasNetworkUtilization()) {
        mergeNetworkUtilization(other.getNetworkUtilization());
      }
      if (other.hasStandardSchedulerSettings()) {
        mergeStandardSchedulerSettings(other.getStandardSchedulerSettings());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.appengine.v1.AutomaticScaling parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.appengine.v1.AutomaticScaling) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.Duration coolDownPeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> coolDownPeriodBuilder_;
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     * @return Whether the coolDownPeriod field is set.
     */
    public boolean hasCoolDownPeriod() {
      return coolDownPeriodBuilder_ != null || coolDownPeriod_ != null;
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     * @return The coolDownPeriod.
     */
    public com.google.protobuf.Duration getCoolDownPeriod() {
      if (coolDownPeriodBuilder_ == null) {
        return coolDownPeriod_ == null ? com.google.protobuf.Duration.getDefaultInstance() : coolDownPeriod_;
      } else {
        return coolDownPeriodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public Builder setCoolDownPeriod(com.google.protobuf.Duration value) {
      if (coolDownPeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        coolDownPeriod_ = value;
        onChanged();
      } else {
        coolDownPeriodBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public Builder setCoolDownPeriod(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (coolDownPeriodBuilder_ == null) {
        coolDownPeriod_ = builderForValue.build();
        onChanged();
      } else {
        coolDownPeriodBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public Builder mergeCoolDownPeriod(com.google.protobuf.Duration value) {
      if (coolDownPeriodBuilder_ == null) {
        if (coolDownPeriod_ != null) {
          coolDownPeriod_ =
            com.google.protobuf.Duration.newBuilder(coolDownPeriod_).mergeFrom(value).buildPartial();
        } else {
          coolDownPeriod_ = value;
        }
        onChanged();
      } else {
        coolDownPeriodBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public Builder clearCoolDownPeriod() {
      if (coolDownPeriodBuilder_ == null) {
        coolDownPeriod_ = null;
        onChanged();
      } else {
        coolDownPeriod_ = null;
        coolDownPeriodBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public com.google.protobuf.Duration.Builder getCoolDownPeriodBuilder() {
      
      onChanged();
      return getCoolDownPeriodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getCoolDownPeriodOrBuilder() {
      if (coolDownPeriodBuilder_ != null) {
        return coolDownPeriodBuilder_.getMessageOrBuilder();
      } else {
        return coolDownPeriod_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : coolDownPeriod_;
      }
    }
    /**
     * <pre>
     * The time period that the
     * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
     * should wait before it starts collecting information from a new instance.
     * This prevents the autoscaler from collecting information when the instance
     * is initializing, during which the collected usage would not be reliable.
     * Only applicable in the App Engine flexible environment.
     * </pre>
     *
     * <code>.google.protobuf.Duration cool_down_period = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getCoolDownPeriodFieldBuilder() {
      if (coolDownPeriodBuilder_ == null) {
        coolDownPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getCoolDownPeriod(),
                getParentForChildren(),
                isClean());
        coolDownPeriod_ = null;
      }
      return coolDownPeriodBuilder_;
    }

    private com.google.appengine.v1.CpuUtilization cpuUtilization_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.CpuUtilization, com.google.appengine.v1.CpuUtilization.Builder, com.google.appengine.v1.CpuUtilizationOrBuilder> cpuUtilizationBuilder_;
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     * @return Whether the cpuUtilization field is set.
     */
    public boolean hasCpuUtilization() {
      return cpuUtilizationBuilder_ != null || cpuUtilization_ != null;
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     * @return The cpuUtilization.
     */
    public com.google.appengine.v1.CpuUtilization getCpuUtilization() {
      if (cpuUtilizationBuilder_ == null) {
        return cpuUtilization_ == null ? com.google.appengine.v1.CpuUtilization.getDefaultInstance() : cpuUtilization_;
      } else {
        return cpuUtilizationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public Builder setCpuUtilization(com.google.appengine.v1.CpuUtilization value) {
      if (cpuUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cpuUtilization_ = value;
        onChanged();
      } else {
        cpuUtilizationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public Builder setCpuUtilization(
        com.google.appengine.v1.CpuUtilization.Builder builderForValue) {
      if (cpuUtilizationBuilder_ == null) {
        cpuUtilization_ = builderForValue.build();
        onChanged();
      } else {
        cpuUtilizationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public Builder mergeCpuUtilization(com.google.appengine.v1.CpuUtilization value) {
      if (cpuUtilizationBuilder_ == null) {
        if (cpuUtilization_ != null) {
          cpuUtilization_ =
            com.google.appengine.v1.CpuUtilization.newBuilder(cpuUtilization_).mergeFrom(value).buildPartial();
        } else {
          cpuUtilization_ = value;
        }
        onChanged();
      } else {
        cpuUtilizationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public Builder clearCpuUtilization() {
      if (cpuUtilizationBuilder_ == null) {
        cpuUtilization_ = null;
        onChanged();
      } else {
        cpuUtilization_ = null;
        cpuUtilizationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public com.google.appengine.v1.CpuUtilization.Builder getCpuUtilizationBuilder() {
      
      onChanged();
      return getCpuUtilizationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    public com.google.appengine.v1.CpuUtilizationOrBuilder getCpuUtilizationOrBuilder() {
      if (cpuUtilizationBuilder_ != null) {
        return cpuUtilizationBuilder_.getMessageOrBuilder();
      } else {
        return cpuUtilization_ == null ?
            com.google.appengine.v1.CpuUtilization.getDefaultInstance() : cpuUtilization_;
      }
    }
    /**
     * <pre>
     * Target scaling by CPU usage.
     * </pre>
     *
     * <code>.google.appengine.v1.CpuUtilization cpu_utilization = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.CpuUtilization, com.google.appengine.v1.CpuUtilization.Builder, com.google.appengine.v1.CpuUtilizationOrBuilder> 
        getCpuUtilizationFieldBuilder() {
      if (cpuUtilizationBuilder_ == null) {
        cpuUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.appengine.v1.CpuUtilization, com.google.appengine.v1.CpuUtilization.Builder, com.google.appengine.v1.CpuUtilizationOrBuilder>(
                getCpuUtilization(),
                getParentForChildren(),
                isClean());
        cpuUtilization_ = null;
      }
      return cpuUtilizationBuilder_;
    }

    private int maxConcurrentRequests_ ;
    /**
     * <pre>
     * Number of concurrent requests an automatic scaling instance can accept
     * before the scheduler spawns a new instance.
     * Defaults to a runtime-specific value.
     * </pre>
     *
     * <code>int32 max_concurrent_requests = 3;</code>
     * @return The maxConcurrentRequests.
     */
    @java.lang.Override
    public int getMaxConcurrentRequests() {
      return maxConcurrentRequests_;
    }
    /**
     * <pre>
     * Number of concurrent requests an automatic scaling instance can accept
     * before the scheduler spawns a new instance.
     * Defaults to a runtime-specific value.
     * </pre>
     *
     * <code>int32 max_concurrent_requests = 3;</code>
     * @param value The maxConcurrentRequests to set.
     * @return This builder for chaining.
     */
    public Builder setMaxConcurrentRequests(int value) {
      
      maxConcurrentRequests_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of concurrent requests an automatic scaling instance can accept
     * before the scheduler spawns a new instance.
     * Defaults to a runtime-specific value.
     * </pre>
     *
     * <code>int32 max_concurrent_requests = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxConcurrentRequests() {
      
      maxConcurrentRequests_ = 0;
      onChanged();
      return this;
    }

    private int maxIdleInstances_ ;
    /**
     * <pre>
     * Maximum number of idle instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 max_idle_instances = 4;</code>
     * @return The maxIdleInstances.
     */
    @java.lang.Override
    public int getMaxIdleInstances() {
      return maxIdleInstances_;
    }
    /**
     * <pre>
     * Maximum number of idle instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 max_idle_instances = 4;</code>
     * @param value The maxIdleInstances to set.
     * @return This builder for chaining.
     */
    public Builder setMaxIdleInstances(int value) {
      
      maxIdleInstances_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum number of idle instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 max_idle_instances = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxIdleInstances() {
      
      maxIdleInstances_ = 0;
      onChanged();
      return this;
    }

    private int maxTotalInstances_ ;
    /**
     * <pre>
     * Maximum number of instances that should be started to handle requests for
     * this version.
     * </pre>
     *
     * <code>int32 max_total_instances = 5;</code>
     * @return The maxTotalInstances.
     */
    @java.lang.Override
    public int getMaxTotalInstances() {
      return maxTotalInstances_;
    }
    /**
     * <pre>
     * Maximum number of instances that should be started to handle requests for
     * this version.
     * </pre>
     *
     * <code>int32 max_total_instances = 5;</code>
     * @param value The maxTotalInstances to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTotalInstances(int value) {
      
      maxTotalInstances_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum number of instances that should be started to handle requests for
     * this version.
     * </pre>
     *
     * <code>int32 max_total_instances = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTotalInstances() {
      
      maxTotalInstances_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration maxPendingLatency_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maxPendingLatencyBuilder_;
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     * @return Whether the maxPendingLatency field is set.
     */
    public boolean hasMaxPendingLatency() {
      return maxPendingLatencyBuilder_ != null || maxPendingLatency_ != null;
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     * @return The maxPendingLatency.
     */
    public com.google.protobuf.Duration getMaxPendingLatency() {
      if (maxPendingLatencyBuilder_ == null) {
        return maxPendingLatency_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxPendingLatency_;
      } else {
        return maxPendingLatencyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public Builder setMaxPendingLatency(com.google.protobuf.Duration value) {
      if (maxPendingLatencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxPendingLatency_ = value;
        onChanged();
      } else {
        maxPendingLatencyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public Builder setMaxPendingLatency(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (maxPendingLatencyBuilder_ == null) {
        maxPendingLatency_ = builderForValue.build();
        onChanged();
      } else {
        maxPendingLatencyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public Builder mergeMaxPendingLatency(com.google.protobuf.Duration value) {
      if (maxPendingLatencyBuilder_ == null) {
        if (maxPendingLatency_ != null) {
          maxPendingLatency_ =
            com.google.protobuf.Duration.newBuilder(maxPendingLatency_).mergeFrom(value).buildPartial();
        } else {
          maxPendingLatency_ = value;
        }
        onChanged();
      } else {
        maxPendingLatencyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public Builder clearMaxPendingLatency() {
      if (maxPendingLatencyBuilder_ == null) {
        maxPendingLatency_ = null;
        onChanged();
      } else {
        maxPendingLatency_ = null;
        maxPendingLatencyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public com.google.protobuf.Duration.Builder getMaxPendingLatencyBuilder() {
      
      onChanged();
      return getMaxPendingLatencyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    public com.google.protobuf.DurationOrBuilder getMaxPendingLatencyOrBuilder() {
      if (maxPendingLatencyBuilder_ != null) {
        return maxPendingLatencyBuilder_.getMessageOrBuilder();
      } else {
        return maxPendingLatency_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : maxPendingLatency_;
      }
    }
    /**
     * <pre>
     * Maximum amount of time that a request should wait in the pending queue
     * before starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_pending_latency = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMaxPendingLatencyFieldBuilder() {
      if (maxPendingLatencyBuilder_ == null) {
        maxPendingLatencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMaxPendingLatency(),
                getParentForChildren(),
                isClean());
        maxPendingLatency_ = null;
      }
      return maxPendingLatencyBuilder_;
    }

    private int minIdleInstances_ ;
    /**
     * <pre>
     * Minimum number of idle instances that should be maintained for
     * this version. Only applicable for the default version of a service.
     * </pre>
     *
     * <code>int32 min_idle_instances = 7;</code>
     * @return The minIdleInstances.
     */
    @java.lang.Override
    public int getMinIdleInstances() {
      return minIdleInstances_;
    }
    /**
     * <pre>
     * Minimum number of idle instances that should be maintained for
     * this version. Only applicable for the default version of a service.
     * </pre>
     *
     * <code>int32 min_idle_instances = 7;</code>
     * @param value The minIdleInstances to set.
     * @return This builder for chaining.
     */
    public Builder setMinIdleInstances(int value) {
      
      minIdleInstances_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum number of idle instances that should be maintained for
     * this version. Only applicable for the default version of a service.
     * </pre>
     *
     * <code>int32 min_idle_instances = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinIdleInstances() {
      
      minIdleInstances_ = 0;
      onChanged();
      return this;
    }

    private int minTotalInstances_ ;
    /**
     * <pre>
     * Minimum number of running instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 min_total_instances = 8;</code>
     * @return The minTotalInstances.
     */
    @java.lang.Override
    public int getMinTotalInstances() {
      return minTotalInstances_;
    }
    /**
     * <pre>
     * Minimum number of running instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 min_total_instances = 8;</code>
     * @param value The minTotalInstances to set.
     * @return This builder for chaining.
     */
    public Builder setMinTotalInstances(int value) {
      
      minTotalInstances_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum number of running instances that should be maintained for this
     * version.
     * </pre>
     *
     * <code>int32 min_total_instances = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinTotalInstances() {
      
      minTotalInstances_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration minPendingLatency_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> minPendingLatencyBuilder_;
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     * @return Whether the minPendingLatency field is set.
     */
    public boolean hasMinPendingLatency() {
      return minPendingLatencyBuilder_ != null || minPendingLatency_ != null;
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     * @return The minPendingLatency.
     */
    public com.google.protobuf.Duration getMinPendingLatency() {
      if (minPendingLatencyBuilder_ == null) {
        return minPendingLatency_ == null ? com.google.protobuf.Duration.getDefaultInstance() : minPendingLatency_;
      } else {
        return minPendingLatencyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public Builder setMinPendingLatency(com.google.protobuf.Duration value) {
      if (minPendingLatencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minPendingLatency_ = value;
        onChanged();
      } else {
        minPendingLatencyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public Builder setMinPendingLatency(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (minPendingLatencyBuilder_ == null) {
        minPendingLatency_ = builderForValue.build();
        onChanged();
      } else {
        minPendingLatencyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public Builder mergeMinPendingLatency(com.google.protobuf.Duration value) {
      if (minPendingLatencyBuilder_ == null) {
        if (minPendingLatency_ != null) {
          minPendingLatency_ =
            com.google.protobuf.Duration.newBuilder(minPendingLatency_).mergeFrom(value).buildPartial();
        } else {
          minPendingLatency_ = value;
        }
        onChanged();
      } else {
        minPendingLatencyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public Builder clearMinPendingLatency() {
      if (minPendingLatencyBuilder_ == null) {
        minPendingLatency_ = null;
        onChanged();
      } else {
        minPendingLatency_ = null;
        minPendingLatencyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public com.google.protobuf.Duration.Builder getMinPendingLatencyBuilder() {
      
      onChanged();
      return getMinPendingLatencyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    public com.google.protobuf.DurationOrBuilder getMinPendingLatencyOrBuilder() {
      if (minPendingLatencyBuilder_ != null) {
        return minPendingLatencyBuilder_.getMessageOrBuilder();
      } else {
        return minPendingLatency_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : minPendingLatency_;
      }
    }
    /**
     * <pre>
     * Minimum amount of time a request should wait in the pending queue before
     * starting a new instance to handle it.
     * </pre>
     *
     * <code>.google.protobuf.Duration min_pending_latency = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMinPendingLatencyFieldBuilder() {
      if (minPendingLatencyBuilder_ == null) {
        minPendingLatencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMinPendingLatency(),
                getParentForChildren(),
                isClean());
        minPendingLatency_ = null;
      }
      return minPendingLatencyBuilder_;
    }

    private com.google.appengine.v1.RequestUtilization requestUtilization_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.RequestUtilization, com.google.appengine.v1.RequestUtilization.Builder, com.google.appengine.v1.RequestUtilizationOrBuilder> requestUtilizationBuilder_;
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     * @return Whether the requestUtilization field is set.
     */
    public boolean hasRequestUtilization() {
      return requestUtilizationBuilder_ != null || requestUtilization_ != null;
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     * @return The requestUtilization.
     */
    public com.google.appengine.v1.RequestUtilization getRequestUtilization() {
      if (requestUtilizationBuilder_ == null) {
        return requestUtilization_ == null ? com.google.appengine.v1.RequestUtilization.getDefaultInstance() : requestUtilization_;
      } else {
        return requestUtilizationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public Builder setRequestUtilization(com.google.appengine.v1.RequestUtilization value) {
      if (requestUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestUtilization_ = value;
        onChanged();
      } else {
        requestUtilizationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public Builder setRequestUtilization(
        com.google.appengine.v1.RequestUtilization.Builder builderForValue) {
      if (requestUtilizationBuilder_ == null) {
        requestUtilization_ = builderForValue.build();
        onChanged();
      } else {
        requestUtilizationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public Builder mergeRequestUtilization(com.google.appengine.v1.RequestUtilization value) {
      if (requestUtilizationBuilder_ == null) {
        if (requestUtilization_ != null) {
          requestUtilization_ =
            com.google.appengine.v1.RequestUtilization.newBuilder(requestUtilization_).mergeFrom(value).buildPartial();
        } else {
          requestUtilization_ = value;
        }
        onChanged();
      } else {
        requestUtilizationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public Builder clearRequestUtilization() {
      if (requestUtilizationBuilder_ == null) {
        requestUtilization_ = null;
        onChanged();
      } else {
        requestUtilization_ = null;
        requestUtilizationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public com.google.appengine.v1.RequestUtilization.Builder getRequestUtilizationBuilder() {
      
      onChanged();
      return getRequestUtilizationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    public com.google.appengine.v1.RequestUtilizationOrBuilder getRequestUtilizationOrBuilder() {
      if (requestUtilizationBuilder_ != null) {
        return requestUtilizationBuilder_.getMessageOrBuilder();
      } else {
        return requestUtilization_ == null ?
            com.google.appengine.v1.RequestUtilization.getDefaultInstance() : requestUtilization_;
      }
    }
    /**
     * <pre>
     * Target scaling by request utilization.
     * </pre>
     *
     * <code>.google.appengine.v1.RequestUtilization request_utilization = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.RequestUtilization, com.google.appengine.v1.RequestUtilization.Builder, com.google.appengine.v1.RequestUtilizationOrBuilder> 
        getRequestUtilizationFieldBuilder() {
      if (requestUtilizationBuilder_ == null) {
        requestUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.appengine.v1.RequestUtilization, com.google.appengine.v1.RequestUtilization.Builder, com.google.appengine.v1.RequestUtilizationOrBuilder>(
                getRequestUtilization(),
                getParentForChildren(),
                isClean());
        requestUtilization_ = null;
      }
      return requestUtilizationBuilder_;
    }

    private com.google.appengine.v1.DiskUtilization diskUtilization_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.DiskUtilization, com.google.appengine.v1.DiskUtilization.Builder, com.google.appengine.v1.DiskUtilizationOrBuilder> diskUtilizationBuilder_;
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     * @return Whether the diskUtilization field is set.
     */
    public boolean hasDiskUtilization() {
      return diskUtilizationBuilder_ != null || diskUtilization_ != null;
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     * @return The diskUtilization.
     */
    public com.google.appengine.v1.DiskUtilization getDiskUtilization() {
      if (diskUtilizationBuilder_ == null) {
        return diskUtilization_ == null ? com.google.appengine.v1.DiskUtilization.getDefaultInstance() : diskUtilization_;
      } else {
        return diskUtilizationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public Builder setDiskUtilization(com.google.appengine.v1.DiskUtilization value) {
      if (diskUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        diskUtilization_ = value;
        onChanged();
      } else {
        diskUtilizationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public Builder setDiskUtilization(
        com.google.appengine.v1.DiskUtilization.Builder builderForValue) {
      if (diskUtilizationBuilder_ == null) {
        diskUtilization_ = builderForValue.build();
        onChanged();
      } else {
        diskUtilizationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public Builder mergeDiskUtilization(com.google.appengine.v1.DiskUtilization value) {
      if (diskUtilizationBuilder_ == null) {
        if (diskUtilization_ != null) {
          diskUtilization_ =
            com.google.appengine.v1.DiskUtilization.newBuilder(diskUtilization_).mergeFrom(value).buildPartial();
        } else {
          diskUtilization_ = value;
        }
        onChanged();
      } else {
        diskUtilizationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public Builder clearDiskUtilization() {
      if (diskUtilizationBuilder_ == null) {
        diskUtilization_ = null;
        onChanged();
      } else {
        diskUtilization_ = null;
        diskUtilizationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public com.google.appengine.v1.DiskUtilization.Builder getDiskUtilizationBuilder() {
      
      onChanged();
      return getDiskUtilizationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    public com.google.appengine.v1.DiskUtilizationOrBuilder getDiskUtilizationOrBuilder() {
      if (diskUtilizationBuilder_ != null) {
        return diskUtilizationBuilder_.getMessageOrBuilder();
      } else {
        return diskUtilization_ == null ?
            com.google.appengine.v1.DiskUtilization.getDefaultInstance() : diskUtilization_;
      }
    }
    /**
     * <pre>
     * Target scaling by disk usage.
     * </pre>
     *
     * <code>.google.appengine.v1.DiskUtilization disk_utilization = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.DiskUtilization, com.google.appengine.v1.DiskUtilization.Builder, com.google.appengine.v1.DiskUtilizationOrBuilder> 
        getDiskUtilizationFieldBuilder() {
      if (diskUtilizationBuilder_ == null) {
        diskUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.appengine.v1.DiskUtilization, com.google.appengine.v1.DiskUtilization.Builder, com.google.appengine.v1.DiskUtilizationOrBuilder>(
                getDiskUtilization(),
                getParentForChildren(),
                isClean());
        diskUtilization_ = null;
      }
      return diskUtilizationBuilder_;
    }

    private com.google.appengine.v1.NetworkUtilization networkUtilization_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.NetworkUtilization, com.google.appengine.v1.NetworkUtilization.Builder, com.google.appengine.v1.NetworkUtilizationOrBuilder> networkUtilizationBuilder_;
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     * @return Whether the networkUtilization field is set.
     */
    public boolean hasNetworkUtilization() {
      return networkUtilizationBuilder_ != null || networkUtilization_ != null;
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     * @return The networkUtilization.
     */
    public com.google.appengine.v1.NetworkUtilization getNetworkUtilization() {
      if (networkUtilizationBuilder_ == null) {
        return networkUtilization_ == null ? com.google.appengine.v1.NetworkUtilization.getDefaultInstance() : networkUtilization_;
      } else {
        return networkUtilizationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public Builder setNetworkUtilization(com.google.appengine.v1.NetworkUtilization value) {
      if (networkUtilizationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        networkUtilization_ = value;
        onChanged();
      } else {
        networkUtilizationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public Builder setNetworkUtilization(
        com.google.appengine.v1.NetworkUtilization.Builder builderForValue) {
      if (networkUtilizationBuilder_ == null) {
        networkUtilization_ = builderForValue.build();
        onChanged();
      } else {
        networkUtilizationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public Builder mergeNetworkUtilization(com.google.appengine.v1.NetworkUtilization value) {
      if (networkUtilizationBuilder_ == null) {
        if (networkUtilization_ != null) {
          networkUtilization_ =
            com.google.appengine.v1.NetworkUtilization.newBuilder(networkUtilization_).mergeFrom(value).buildPartial();
        } else {
          networkUtilization_ = value;
        }
        onChanged();
      } else {
        networkUtilizationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public Builder clearNetworkUtilization() {
      if (networkUtilizationBuilder_ == null) {
        networkUtilization_ = null;
        onChanged();
      } else {
        networkUtilization_ = null;
        networkUtilizationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public com.google.appengine.v1.NetworkUtilization.Builder getNetworkUtilizationBuilder() {
      
      onChanged();
      return getNetworkUtilizationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    public com.google.appengine.v1.NetworkUtilizationOrBuilder getNetworkUtilizationOrBuilder() {
      if (networkUtilizationBuilder_ != null) {
        return networkUtilizationBuilder_.getMessageOrBuilder();
      } else {
        return networkUtilization_ == null ?
            com.google.appengine.v1.NetworkUtilization.getDefaultInstance() : networkUtilization_;
      }
    }
    /**
     * <pre>
     * Target scaling by network usage.
     * </pre>
     *
     * <code>.google.appengine.v1.NetworkUtilization network_utilization = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.NetworkUtilization, com.google.appengine.v1.NetworkUtilization.Builder, com.google.appengine.v1.NetworkUtilizationOrBuilder> 
        getNetworkUtilizationFieldBuilder() {
      if (networkUtilizationBuilder_ == null) {
        networkUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.appengine.v1.NetworkUtilization, com.google.appengine.v1.NetworkUtilization.Builder, com.google.appengine.v1.NetworkUtilizationOrBuilder>(
                getNetworkUtilization(),
                getParentForChildren(),
                isClean());
        networkUtilization_ = null;
      }
      return networkUtilizationBuilder_;
    }

    private com.google.appengine.v1.StandardSchedulerSettings standardSchedulerSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.StandardSchedulerSettings, com.google.appengine.v1.StandardSchedulerSettings.Builder, com.google.appengine.v1.StandardSchedulerSettingsOrBuilder> standardSchedulerSettingsBuilder_;
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     * @return Whether the standardSchedulerSettings field is set.
     */
    public boolean hasStandardSchedulerSettings() {
      return standardSchedulerSettingsBuilder_ != null || standardSchedulerSettings_ != null;
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     * @return The standardSchedulerSettings.
     */
    public com.google.appengine.v1.StandardSchedulerSettings getStandardSchedulerSettings() {
      if (standardSchedulerSettingsBuilder_ == null) {
        return standardSchedulerSettings_ == null ? com.google.appengine.v1.StandardSchedulerSettings.getDefaultInstance() : standardSchedulerSettings_;
      } else {
        return standardSchedulerSettingsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public Builder setStandardSchedulerSettings(com.google.appengine.v1.StandardSchedulerSettings value) {
      if (standardSchedulerSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        standardSchedulerSettings_ = value;
        onChanged();
      } else {
        standardSchedulerSettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public Builder setStandardSchedulerSettings(
        com.google.appengine.v1.StandardSchedulerSettings.Builder builderForValue) {
      if (standardSchedulerSettingsBuilder_ == null) {
        standardSchedulerSettings_ = builderForValue.build();
        onChanged();
      } else {
        standardSchedulerSettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public Builder mergeStandardSchedulerSettings(com.google.appengine.v1.StandardSchedulerSettings value) {
      if (standardSchedulerSettingsBuilder_ == null) {
        if (standardSchedulerSettings_ != null) {
          standardSchedulerSettings_ =
            com.google.appengine.v1.StandardSchedulerSettings.newBuilder(standardSchedulerSettings_).mergeFrom(value).buildPartial();
        } else {
          standardSchedulerSettings_ = value;
        }
        onChanged();
      } else {
        standardSchedulerSettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public Builder clearStandardSchedulerSettings() {
      if (standardSchedulerSettingsBuilder_ == null) {
        standardSchedulerSettings_ = null;
        onChanged();
      } else {
        standardSchedulerSettings_ = null;
        standardSchedulerSettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public com.google.appengine.v1.StandardSchedulerSettings.Builder getStandardSchedulerSettingsBuilder() {
      
      onChanged();
      return getStandardSchedulerSettingsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    public com.google.appengine.v1.StandardSchedulerSettingsOrBuilder getStandardSchedulerSettingsOrBuilder() {
      if (standardSchedulerSettingsBuilder_ != null) {
        return standardSchedulerSettingsBuilder_.getMessageOrBuilder();
      } else {
        return standardSchedulerSettings_ == null ?
            com.google.appengine.v1.StandardSchedulerSettings.getDefaultInstance() : standardSchedulerSettings_;
      }
    }
    /**
     * <pre>
     * Scheduler settings for standard environment.
     * </pre>
     *
     * <code>.google.appengine.v1.StandardSchedulerSettings standard_scheduler_settings = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.appengine.v1.StandardSchedulerSettings, com.google.appengine.v1.StandardSchedulerSettings.Builder, com.google.appengine.v1.StandardSchedulerSettingsOrBuilder> 
        getStandardSchedulerSettingsFieldBuilder() {
      if (standardSchedulerSettingsBuilder_ == null) {
        standardSchedulerSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.appengine.v1.StandardSchedulerSettings, com.google.appengine.v1.StandardSchedulerSettings.Builder, com.google.appengine.v1.StandardSchedulerSettingsOrBuilder>(
                getStandardSchedulerSettings(),
                getParentForChildren(),
                isClean());
        standardSchedulerSettings_ = null;
      }
      return standardSchedulerSettingsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.appengine.v1.AutomaticScaling)
  }

  // @@protoc_insertion_point(class_scope:google.appengine.v1.AutomaticScaling)
  private static final com.google.appengine.v1.AutomaticScaling DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.appengine.v1.AutomaticScaling();
  }

  public static com.google.appengine.v1.AutomaticScaling getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutomaticScaling>
      PARSER = new com.google.protobuf.AbstractParser<AutomaticScaling>() {
    @java.lang.Override
    public AutomaticScaling parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AutomaticScaling(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AutomaticScaling> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutomaticScaling> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.appengine.v1.AutomaticScaling getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

